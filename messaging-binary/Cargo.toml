[package]
name = "messaging-binary"
version = "0.1.0"
edition = "2021"
publish = false
description = """
An example provider that uses wasmcloud provider bindgen to generate a binary provider for wasmCloud
"""

[[bin]]
name = "nats_messaging"
path = "src/main.rs"

[dependencies]
# Host specific
wit-bindgen-wasmcloud-provider-binary = { path = "../../wit-bindgen-wasmcloud-provider-binary" } #, features = [ "debug" ] }
wasmcloud-provider-sdk = { git = "https://github.com/wasmCloud/wasmCloud.git", branch = "main" }

# NOTE: required due to code introduced by wasmtime component bindgen (we can't get rid of this)
wasmtime = { version = "11.0.1", features = [ "component-model" ]}

## NOTE: required due to codegen'd ProivderHandler implementation
async-trait = "0.1.72"

# Serde's Serialize/Deserialize can't be re-exported
# https://github.com/serde-rs/serde/issues/1465
serde = { version = "1.0.175", features = ["derive"] }

# NOTE(vados-cosmonic): deps below here are due to code in main.rs (normally NOT generated)
# but is included in this example to try to get to parity/sanity test w/ handrolled
#
# In the end the handrolled stuff in main.rs doesn't compile, mostly because NatsMessagingProvider is *not*
# the impl struct that gets fed to bindgen, for some reason...
#
anyhow = "1"
async-nats = "0.30"
atty = "0.2"
base64 = "0.21"
bytes = "1.0"
chrono = "0.4"
crossbeam="0.8"
futures = "0.3"
once_cell = "1.8"
rmp-serde = "1.1.0"
serde_bytes = "0.11"
serde_json = "1.0"
thiserror = "1.0"
tokio = { version = "1", features = ["full"] }
toml = "0.7"
tracing = "0.1"
tracing-futures = "0.2"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
wascap = "0.10"

## At some point, for otel support
#tracing = "0.1.37"
#tracing-futures = "0.2.5"

[profile.release]
strip = true
opt-level = "z"
lto = true
